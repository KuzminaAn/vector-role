---
- name: Create Vector work directory
  ansible.builtin.file:
    path: "{{ vector_workdir }}"
    state: directory
    mode: "0755"
- name: Create Vector config directory
  become: true
  ansible.builtin.file:
    path: /etc/vector
    state: directory
    mode: "0755"
- name: Get vector distrib
  ansible.builtin.get_url:
    url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-{{ vector_os }}-unknown-linux-gnu.tar.gz"
    dest: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os }}-unknown-linux-gnu.tar.gz"
    mode: "0644"
- name: Unzip distrib archive
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ vector_workdir }}/vector-{{ vector_version }}-{{ vector_os }}-unknown-linux-gnu.tar.gz"
    dest: "{{ vector_workdir }}"
- name: Install vector bin file
  become: true
  ansible.builtin.copy:
    remote_src: true
    src: "{{ vector_workdir }}/vector-{{ vector_os }}-unknown-linux-gnu/bin/vector"
    dest: "/usr/bin/"
    mode: "0755"
- name: Create vector config from template
  become: true
  ansible.builtin.template:
    src: "vector-config.j2"
    dest: "/etc/vector/vector.yaml"
    mode: '0644'
  notify: Restart Vector service
- name: Create vector.service daemon
  become: true
  ansible.builtin.copy:
    remote_src: true
    src: "{{ vector_workdir }}/vector-{{ vector_os }}-unknown-linux-gnu/etc/systemd/vector.service"
    dest: "/lib/systemd/system/"
    mode: "0644"
  notify: Start Vector service
- name: Modify vector.service file
  become: true
  ansible.builtin.replace:
    backup: true
    path: "/lib/systemd/system/vector.service"
    regexp: "^ExecStart=/usr/bin/vector$"
    replace: "ExecStart=/usr/bin/vector --config /etc/vector/vector.yaml"
  notify: Restart Vector service